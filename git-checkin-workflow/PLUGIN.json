{
  "commands": [
    {"git checkin": "git-checkin-workflow"},
    {"git checkin fast": "git-checkin-fast-workflow"},
    {"run tests and commit": "test-and-commit-workflow"},
    {"full deploy workflow": "deploy-workflow"}
  ],
  "processes": [
    {"git-checkin-workflow": {
      "instructions": "Execute the git checkin sequence: status check, staging, review, and commit with suggested message",
      "sequence": [
        "Run 'git status' to check repository state",
        "Run 'git add .' to stage all changes", 
        "Run 'git diff --staged' to review staged changes",
        "Analyze the changes and suggest a commit message based on the diff",
        "Ask user to confirm the suggested message or provide an alternative",
        "Run 'git commit -m \"<message>\"' with the confirmed message"
      ]
    }},
    {"git-checkin-fast-workflow": {
      "instructions": "Execute the git checkin sequence with auto-generated commit message (no confirmation)",
      "sequence": [
        "Run 'git status' to check repository state",
        "Run 'git add .' to stage all changes", 
        "Run 'git diff --staged' to review staged changes",
        "Analyze the changes and generate a commit message based on the diff",
        "Run 'git commit -m \"<message>\"' immediately with the generated message"
      ]
    }},
    {"test-and-commit-workflow": {
      "instructions": "Execute the test and commit sequence with validation at each step",
      "sequence": [
        "Run 'npm test' or equivalent test command",
        "If tests pass, run 'git add .'",
        "Run 'git commit -m \"Tests passing: <description>\"'",
        "Run 'git push origin <branch>'"
      ]
    }},
    {"deploy-workflow": {
      "instructions": "Execute the full deployment sequence from linting to deployment",
      "sequence": [
        "Run 'npm run lint' to check code style",
        "Run 'npm test' to validate functionality", 
        "Run 'npm run build' to create production build",
        "Run 'git add .' to stage changes",
        "Prompt for commit message and run 'git commit'",
        "Run 'git push origin main'",
        "Run deployment command if configured"
      ]
    }}
  ]
}